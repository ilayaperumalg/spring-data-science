apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

sourceCompatibility = 1.7
version = '1.0.0.SNAPSHOT'
jar {
    manifest {
		attributes 'Implementation-Title': 'Spring Data Science', 'Implementation-Version': version
    }
}

eclipse {
	project { natures += 'org.springframework.ide.eclipse.core.springnature' }
	}

// Include project specific settings
task eclipseSettings(type: Copy) {
	from rootProject.files(
		"eclipse/org.eclipse.jdt.ui.prefs",
		"eclipse/de.loskutov.anyedit.AnyEditTools.prefs")
		into project.file('.settings/')
	}

task eclipseJdtPrepare(type: Copy) {
	from rootProject.file("eclipse/org.eclipse.jdt.core.prefs")
	into project.file(".settings/")
}

task cleanEclipseJdtUi(type: Delete) {
	delete project.file(".settings/org.eclipse.jdt.ui.prefs")
	delete project.file(".settings/org.eclipse.jdt.core.prefs")
}

tasks["eclipseJdt"].dependsOn(eclipseJdtPrepare)
tasks["cleanEclipse"].dependsOn(cleanEclipseJdtUi)
tasks["eclipse"].dependsOn(eclipseSettings)


repositories {
	mavenCentral()
	maven { url 'http://repo.spring.io/plugins-release' }	
}

dependencies {

 	compile "org.springframework:spring-core:$springVersion"
 	compile "org.jpmml:pmml-evaluator:$jpmmlEvaluatorVersion"
	compile "org.slf4j:jcl-over-slf4j:$slf4jVersion"
	compile "com.google.guava:guava:$guavaVersion"

	runtime "log4j:log4j:$log4jVersion"
	runtime	"org.slf4j:jcl-over-slf4j:$slf4jVersion"
	runtime	"org.slf4j:slf4j-log4j12:$slf4jVersion"
	
	// Testing
	testCompile "junit:junit:$junitVersion"
	testCompile "org.springframework:spring-test:$springVersion"
	testCompile "org.mockito:mockito-core:$mockitoVersion"
	testCompile "org.hamcrest:hamcrest-library:$hamcrestVersion"

}
